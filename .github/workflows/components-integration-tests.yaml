name: Components Integration Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  components-launch:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
       include:
         - scheduler: "aws_batch"
         - scheduler: "aws_batch"
           container_repo: localhost
           extra_args: "--mock"
         - scheduler: "kubernetes"
         - scheduler: "local_cwd"
         - scheduler: "local_docker"
         - scheduler: "ray"
      fail-fast: false
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: x64
      - name: Checkout TorchX
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-torchx
        continue-on-error: true
      - name: Configure Kube Config
        env:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
        run: |
          set -eux
          if [ -n "$AWS_ROLE_ARN" ]; then
            aws eks update-kubeconfig --region=us-west-2 --name=${{ secrets.EKS_CLUSTER_NAME }}
          fi
      - name: Configure Docker
        env:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
        run: |
          set -eux
          if [ -n "$AWS_ROLE_ARN" ]; then
            aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 495572122715.dkr.ecr.us-west-2.amazonaws.com
          fi

      - name: Install dependencies
        run: |
          set -eux
          pip install -r dev-requirements.txt
          pip install -e .[kubernetes]

      - name: Start Ray
        if: ${{ matrix.scheduler == 'ray' }}
        run: |
          ray start --head
          sleep 5 # wait till the node joins so that `status` command displays the head node info
          ray status

      - name: Run Components Integration Tests
        env:
          INTEGRATION_TEST_STORAGE: ${{ secrets.INTEGRATION_TEST_STORAGE }}
          CONTAINER_REPO: ${{ matrix.container_repo || secrets.CONTAINER_REPO }}
        run: |
          scripts/component_integration_tests.py --scheduler ${{ matrix.scheduler }} ${{ matrix.extra_args }}
